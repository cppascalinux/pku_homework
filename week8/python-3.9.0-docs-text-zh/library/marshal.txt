"marshal" --- 内部 Python 对象序列化
************************************

======================================================================

此模块包含一此能以二进制格式来读写 Python 值的函数。 这种格式是 Python
专属的，但是独立于特定的机器架构（即你可以在一台 PC 上写入某个 Python
值，将文件传到一台 Sun 上并在那里读取它）。 这种格式的细节有意不带文档
说明；它可能在不同 Python 版本中发生改变（但这种情况极少发生）。 [1]

这不是一个通用的“持久化”模块。 对于通用的持久化以及通过 RPC 调用传递
Python 对象，请参阅 "pickle" 和 "shelve" 等模块。 "marshal" 模块主要是
为了支持读写 ".pyc" 文件形式“伪编译”代码的 Python 模块。 因此，Python
维护者保留在必要时以不向下兼容的方式修改 marshal 格式的权利。 如果你要
序列化和反序列化 Python 对象，请改用 "pickle" 模块 -- 其执行效率相当，
版本独立性有保证，并且 pickle 还支持比 marshal 更多样的对象类型。

警告:

  "marshal" 模块对于错误或恶意构建的数据来说是不安全的。 永远不要
  unmarshal 来自不受信任的或未经验证的来源的数据。

不是所有 Python 对象类型都受支持；一般来说，此模块只能写入和读取不依赖
于特定 Python 调用的对象。 下列类型是受支持的：布尔值、整数、浮点数、
复数、字符串、字节串、字节数组、元组、列表、集合、冻结集合、字典和代码
对象，需要了解的一点是元组、列表、集合、冻结集合和字典只在其所包含的值
也是这些值时才受支持。 单例对象 "None", "Ellipsis" and "StopIteration"
也可以被 marshal 和 unmarshal。 对于 *version* 低于 3 的格式，递归列表
、集合和字典无法被写入（见下文）。

有些函数可以读/写文件，还有些函数可以操作字节类对象。

这个模块定义了以下函数：

marshal.dump(value, file[, version])

   向打开的文件写入值。 值必须为受支持的类型。 文件必须为可写的
   *binary file*。

   如果值具有（或所包含的对象具有）不受支持的类型，则会引发
   "ValueError" --- 但是将向文件写入垃圾数据。 对象也将不能正确地通过
   "load()" 重新读取。

   *version* 参数指明 "dump" 应当使用的数据格式（见下文）。

marshal.load(file)

   从打开的文件读取一个值并返回。 如果读不到有效的值（例如由于数据为不
   同 Python 版本的不兼容 marshal 格式），则会引发 "EOFError",
   "ValueError" 或 "TypeError"。 文件必须为可读的 *binary file*。

   注解:

     如果通过 "dump()" marshal 了一个包含不受支持类型的对象，"load()"
     将为不可 marshal 的类型替换 "None"。

marshal.dumps(value[, version])

   返回将通过 "dump(value, file)" 被写入一个文件的字节串对象。 值必须
   属于受支持的类型。 如果值属于（或包含的对象属于）不受支持的类型则会
   引发 "ValueError"。

   *version* 参数指明 "dumps" 应当使用的数据类型（见下文）。

marshal.loads(bytes)

   将 *bytes-like object* 转换为一个值。 如果找不到有效的值，则会引发
   "EOFError", "ValueError" 或 "TypeError"。 输入的额外字节串会被忽略
   。

此外，还定义了以下常量：

marshal.version

   指明模块所使用的格式。 第 0 版为历史格式，第 1 版为共享固化的字符串
   ，第 2 版对浮点数使用二进制格式。 第 3 版添加了对于对象实例化和递归
   的支持。 目前使用的为第 4 版。

-[ 脚注 ]-

[1] 此模块的名称来源于 Modula-3 (及其他语言) 的设计者所使用的术语，他
    们使用术语 "marshal" 来表示以自包含的形式传输数据。 严格地说，将数
    据从内部形式转换为外部形式 (例如用于 RPC 缓冲区) 称为 "marshal" 而
    其逆过程则称为 "unmarshal"。
